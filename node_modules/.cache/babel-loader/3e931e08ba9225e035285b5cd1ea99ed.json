{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Desktop\\\\code\\\\reactproj\\\\src\\\\Components\\\\Movies.js\";\nimport React, { Component } from 'react';\nimport MovieGallery from './MovieGallery';\nimport config from '../config.js'; //const movies = require('../movies.json');\n\nconst firebase = require('firebase');\n/*\n  3. Pagination\n    - first only display 8\n    - display more by 8 (or less than 8 if not a multiple of 8)\n*/\n\n\nexport class Movies extends Component {\n  constructor(props) {\n    super();\n\n    this.myChangeHandler = event => {\n      let field = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [field]: value\n      });\n      let listChoice = document.getElementById('list').value;\n\n      if (listChoice === 'all') {\n        let ref = firebase.database().ref('movies');\n        ref.once('value').then(snapshot => {\n          //ref.on('value', snapshot => {\n          let movies = snapshot.val();\n          let newData = [];\n\n          for (let entry in movies) {\n            newData.push({\n              id: entry,\n              name: movies[entry].name,\n              src: movies[entry].src,\n              director: movies[entry].director,\n              imdb: movies[entry].imdb,\n              plot: movies[entry].plot\n            });\n          }\n\n          this.setState({\n            lastMov: newData[newData.length - 1]\n          });\n\n          if (newData.length < 9) {\n            this.setState({\n              displayButton: 'none'\n            });\n          } else {\n            this.setState({\n              displayButton: 'block'\n            });\n          }\n        }); // PAGINATION\n\n        let first = ref.orderByKey().limitToFirst(9);\n        first.once('value').then(snapshot => {\n          //first.on('value', snapshot => {\n          let firstMovs = snapshot.val();\n          let currEight = [];\n\n          for (let entry in firstMovs) {\n            currEight.push({\n              id: entry,\n              name: firstMovs[entry].name,\n              src: firstMovs[entry].src,\n              director: firstMovs[entry].director,\n              imdb: firstMovs[entry].imdb,\n              plot: firstMovs[entry].plot\n            });\n          }\n\n          this.setState({\n            currPoint: currEight[currEight.length - 1].id\n          });\n          currEight.pop();\n          this.setState({\n            movies: currEight\n          });\n        });\n      } else {\n        let movsInList = [];\n        let ref = firebase.database().ref('relations');\n        ref.once('value').then(snapshot => {\n          //ref.on('value', snapshot => {\n          let rels = snapshot.val();\n\n          for (let entry in rels) {\n            if (rels[entry].list === listChoice) {\n              movsInList.push(rels[entry].mov);\n            }\n          }\n\n          let movsRef = firebase.database().ref('movies');\n          movsRef.once('value').then(snapshot => {\n            //movsRef.on('value', snapshot => {\n            let movies = snapshot.val();\n            let newData = [];\n\n            for (let entry in movies) {\n              if (movsInList.includes(entry)) {\n                newData.push({\n                  id: entry,\n                  name: movies[entry].name,\n                  src: movies[entry].src,\n                  director: movies[entry].director,\n                  imdb: movies[entry].imdb,\n                  plot: movies[entry].plot\n                });\n              }\n            }\n\n            this.setState({\n              movies: newData\n            });\n            this.setState({\n              displayButton: 'none'\n            });\n          }); //ref.off();\n        });\n      }\n    };\n\n    this.state = {\n      currPoint: '',\n      lastMov: '',\n      movies: [],\n      lists: [],\n      listChoice: 'all',\n      displayButton: 'none',\n      shouldUpdate: false\n    };\n  }\n\n  enlarge(imgSrc, title, director, rating, plot, idVal) {\n    document.body.style.overflow = 'hidden';\n    var lbContent = document.createElement('img');\n    lbContent.className = 'movLightbox-content';\n    lbContent.src = imgSrc;\n    lbContent.id = 'lbContent';\n    var lbInfo = document.createElement('div');\n    lbInfo.className = 'movLightbox-info';\n    lbInfo.id = 'lbInfo';\n    lbInfo.innerHTML = '<span class=\\'title\\'>' + title + '</span><br/><span class=\\'director\\'>' + director + '</span><br/><br/><span class=\\'rating\\'>IMDb Rating: ' + rating + '</span><p>' + plot + '</p>';\n    var lbMovie = document.createElement('div');\n    lbMovie.id = 'lbMovie';\n    lbMovie.className = 'movLightbox-container';\n    var lightbox = document.createElement('div');\n    lightbox.id = 'lb';\n    lightbox.className = 'movLightbox';\n    var delButton = document.createElement('button');\n    delButton.id = 'delButton';\n    delButton.innerHTML = 'Delete Movie';\n\n    delButton.onclick = function () {\n      if (window.confirm('Are you sure you want to delete ' + title + '?')) {\n        let ref = firebase.database().ref('movies');\n        ref.once('value').then(snapshot => {\n          let movies = snapshot.val();\n\n          for (let entry in movies) {\n            if (entry === idVal) {\n              firebase.database().ref('movies/' + entry).remove();\n            }\n          }\n        });\n        let refList = firebase.database().ref('relations');\n        refList.once('value').then(snapshot => {\n          let relations = snapshot.val();\n\n          for (let entry in relations) {\n            if (relations[entry].mov === idVal) {\n              firebase.database().ref('relations/' + entry).remove();\n            }\n          }\n        });\n        document.getElementById('lb').removeChild(document.getElementById('lbMovie'));\n        document.body.removeChild(document.getElementById('lb'));\n        document.body.style.overflow = 'auto';\n      }\n    };\n\n    var addList = document.createElement('select');\n    addList.id = 'add-list';\n    addList.style.marginTop = '10px';\n    addList.name = 'addLists';\n    let listRef = firebase.database().ref('lists');\n    let otherLists = [];\n    listRef.once('value').then(snapshot => {\n      //listRef.on('value', snapshot => {\n      let lists = snapshot.val();\n\n      for (let entry in lists) {\n        otherLists.push(lists[entry].name);\n      }\n\n      let relRef = firebase.database().ref('relations');\n      relRef.once('value').then(snapshot => {\n        //relRef.on('value', snapshot => {\n        let rels = snapshot.val();\n\n        for (let entry in rels) {\n          if (rels[entry].mov === idVal) {\n            let pos = otherLists.indexOf(rels[entry].list);\n            otherLists.splice(pos, 1);\n          }\n        }\n\n        var opt = document.createElement('option');\n        opt.value = '';\n        opt.innerHTML = 'Select List';\n        opt.disabled = 'true';\n        opt.selected = 'true';\n        opt.hidden = 'true';\n        addList.appendChild(opt);\n\n        for (var i in otherLists) {\n          opt = document.createElement('option');\n          opt.value = otherLists[i];\n          opt.innerHTML = otherLists[i];\n          addList.appendChild(opt);\n        }\n      });\n    });\n    var listDiv = document.createElement('div');\n    var listBtn = document.createElement('button');\n    listBtn.id = 'list-btn';\n    listBtn.innerHTML = 'Add to List';\n    listDiv.appendChild(addList);\n    listDiv.appendChild(listBtn);\n\n    listBtn.onclick = function () {\n      var choice = document.getElementById('add-list').value;\n\n      if (choice.length === 0) {\n        alert('No list selected.');\n      } else {\n        let formObj = {\n          mov: idVal,\n          list: choice\n        };\n        firebase.database().ref('relations').push().set(formObj);\n        alert('Successfully added ' + title + ' to ' + choice + ' list.');\n      }\n    };\n\n    document.body.appendChild(lightbox);\n    document.getElementById('lb').appendChild(lbMovie);\n    document.getElementById('lbMovie').appendChild(lbContent);\n    document.getElementById('lbMovie').appendChild(lbInfo);\n    document.getElementById('lbInfo').appendChild(listDiv);\n    document.getElementById('lbInfo').appendChild(delButton);\n    document.getElementById('lb').addEventListener('click', function (event) {\n      if (event.target.className === 'movLightbox') {\n        document.getElementById('lb').removeChild(document.getElementById('lbMovie'));\n        document.body.removeChild(document.getElementById('lb'));\n        document.body.style.overflow = 'auto';\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.ref.off();\n    this.listRef.off();\n  }\n\n  componentDidMount() {\n    document.title = 'Great Movies';\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n\n    this.ref = firebase.database().ref('movies');\n    this.ref.on('value', snapshot => {\n      let movies = snapshot.val();\n      let newData = [];\n\n      for (let entry in movies) {\n        newData.push({\n          id: entry,\n          name: movies[entry].name,\n          src: movies[entry].src,\n          director: movies[entry].director,\n          imdb: movies[entry].imdb,\n          plot: movies[entry].plot\n        });\n      }\n\n      this.setState({\n        lastMov: newData[newData.length - 1]\n      });\n\n      if (newData.length < 9) {\n        //document.getElementById('pag-container').style.display = 'none';\n        this.setState({\n          displayButton: 'none'\n        });\n      } else {\n        //document.getElementById('pag-container').style.display = 'block';\n        this.setState({\n          displayButton: 'block'\n        });\n      } //this.setState({movies: newData});\n\n    }); // PAGINATION\n\n    let first = this.ref.orderByKey().limitToFirst(9);\n    first.on('value', snapshot => {\n      if (this.state.listChoice === 'all') {\n        let firstMovs = snapshot.val();\n        let currEight = [];\n\n        for (let entry in firstMovs) {\n          currEight.push({\n            id: entry,\n            name: firstMovs[entry].name,\n            src: firstMovs[entry].src,\n            director: firstMovs[entry].director,\n            imdb: firstMovs[entry].imdb,\n            plot: firstMovs[entry].plot\n          });\n        }\n\n        this.setState({\n          currPoint: currEight[currEight.length - 1].id\n        });\n        currEight.pop();\n        this.setState({\n          movies: currEight\n        });\n      } else {\n        let movsInList = [];\n        let ref = firebase.database().ref('relations');\n        ref.once('value').then(snapshot => {\n          //ref.on('value', snapshot => {\n          let rels = snapshot.val();\n\n          for (let entry in rels) {\n            if (rels[entry].list === this.state.listChoice) {\n              movsInList.push(rels[entry].mov);\n            }\n          }\n\n          let movsRef = firebase.database().ref('movies');\n          movsRef.once('value').then(snapshot => {\n            //movsRef.on('value', snapshot => {\n            let movies = snapshot.val();\n            let newData = [];\n\n            for (let entry in movies) {\n              if (movsInList.includes(entry)) {\n                newData.push({\n                  id: entry,\n                  name: movies[entry].name,\n                  src: movies[entry].src,\n                  director: movies[entry].director,\n                  imdb: movies[entry].imdb,\n                  plot: movies[entry].plot\n                });\n              }\n            }\n\n            this.setState({\n              movies: newData\n            });\n            this.setState({\n              displayButton: 'none'\n            });\n          }); //ref.off();\n        });\n      }\n    });\n    this.listRef = firebase.database().ref('lists');\n    this.listRef.on('value', snapshot => {\n      let lists = snapshot.val();\n      let newData = [];\n\n      for (let entry in lists) {\n        newData.push(lists[entry].name);\n      }\n\n      this.setState({\n        lists: newData\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    if (this.state.shouldUpdate !== prevState.shouldUpdate) {\n      let ref = firebase.database().ref('movies');\n      ref.on('value', snapshot => {\n        let movies = snapshot.val();\n        let newData = [];\n\n        for (let entry in movies) {\n          newData.push({\n            id: entry,\n            name: movies[entry].name,\n            src: movies[entry].src,\n            director: movies[entry].director,\n            imdb: movies[entry].imdb,\n            plot: movies[entry].plot\n          });\n        }\n\n        this.setState({\n          lastMov: newData[newData.length - 1]\n        });\n\n        if (newData.length < 9) {\n          //document.getElementById('pag-container').style.display = 'none';\n          this.setState({\n            displayButton: 'none'\n          });\n        } else {\n          //document.getElementById('pag-container').style.display = 'block';\n          this.setState({\n            displayButton: 'block'\n          });\n        } //this.setState({movies: newData});\n\n      }); // PAGINATION\n\n      let first = ref.orderByKey().limitToFirst(9);\n      first.on('value', snapshot => {\n        let firstMovs = snapshot.val();\n        let currEight = [];\n\n        for (let entry in firstMovs) {\n          currEight.push({\n            id: entry,\n            name: firstMovs[entry].name,\n            src: firstMovs[entry].src,\n            director: firstMovs[entry].director,\n            imdb: firstMovs[entry].imdb,\n            plot: firstMovs[entry].plot\n          });\n        }\n\n        this.setState({\n          currPoint: currEight[currEight.length - 1].id\n        });\n        currEight.pop();\n        this.setState({\n          movies: currEight\n        });\n      });\n      let listRef = firebase.database().ref('lists');\n      listRef.on('value', snapshot => {\n        let lists = snapshot.val();\n        let newData = [];\n\n        for (let entry in lists) {\n          newData.push(lists[entry].name);\n        }\n\n        this.setState({\n          lists: newData\n        });\n      });\n    }\n  }\n\n  getMoreMovies() {\n    let ref = firebase.database().ref('movies');\n    let tmp = ref.orderByKey().startAt(this.state.currPoint);\n    let next = tmp.limitToFirst(9);\n    next.on('value', snapshot => {\n      let nextMovs = snapshot.val();\n      let currEight = [];\n\n      for (let entry in nextMovs) {\n        currEight.push({\n          id: entry,\n          name: nextMovs[entry].name,\n          src: nextMovs[entry].src,\n          director: nextMovs[entry].director,\n          imdb: nextMovs[entry].imdb,\n          plot: nextMovs[entry].plot\n        });\n      } // If last batch \n\n\n      if (currEight[currEight.length - 1].id === this.state.lastMov.id && currEight.length <= 8) {\n        this.setState({\n          displayButton: 'none'\n        });\n      } else {\n        this.setState({\n          currPoint: currEight[currEight.length - 1].id\n        });\n        currEight.pop();\n      }\n\n      let totalMovies = this.state.movies;\n      totalMovies = totalMovies.concat(currEight);\n      this.setState({\n        movies: totalMovies\n      });\n    });\n  }\n\n  searchMovies() {\n    let movChoice = document.getElementById('search').value.toLowerCase();\n    let ref = firebase.database().ref('movies');\n    ref.once('value').then(snapshot => {\n      //ref.on('value', snapshot => {\n      let movies = snapshot.val();\n      let newData = [];\n\n      for (let entry in movies) {\n        let title = movies[entry].name.toLowerCase();\n\n        if (title.includes(movChoice)) {\n          //newData.push(movies[entry].id);\n          newData.push({\n            id: entry,\n            name: movies[entry].name,\n            src: movies[entry].src,\n            director: movies[entry].director,\n            imdb: movies[entry].imdb,\n            plot: movies[entry].plot\n          });\n        }\n      } //if(newData.length < 9) {\n      //document.getElementById('pag-container').style.display = 'none';\n\n\n      this.setState({\n        displayButton: 'none'\n      });\n      /*} else {\n        //document.getElementById('pag-container').style.display = 'block';\n        this.setState({displayButton: 'block'});\n      }*/\n\n      this.setState({\n        movies: newData\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"top-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"listChoice\",\n      id: \"list\",\n      onChange: this.myChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 17\n      }\n    }, \"All\"), this.state.lists.map(list => /*#__PURE__*/React.createElement(\"option\", {\n      value: list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 21\n      }\n    }, list)))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"search-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Movie Title\",\n      name: \"search\",\n      id: \"search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"search-btn\",\n      onClick: this.searchMovies.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 15\n      }\n    }, \"Search\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mov-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MovieGallery, {\n      movieList: this.state.movies,\n      enlarge: this.enlarge,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"pag-container\",\n      style: {\n        display: this.state.displayButton\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"pagination\",\n      onClick: this.getMoreMovies.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 13\n      }\n    }, \"Load More\"))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"scrollButton\",\n      style: {\n        display: this.props.display\n      },\n      onClick: this.props.scrollToTop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 9\n      }\n    }, \"Scroll to Top\"));\n  }\n\n}\nexport default Movies;","map":{"version":3,"sources":["C:/Users/Alex/Desktop/code/reactproj/src/Components/Movies.js"],"names":["React","Component","MovieGallery","config","firebase","require","Movies","constructor","props","myChangeHandler","event","field","target","name","value","setState","listChoice","document","getElementById","ref","database","once","then","snapshot","movies","val","newData","entry","push","id","src","director","imdb","plot","lastMov","length","displayButton","first","orderByKey","limitToFirst","firstMovs","currEight","currPoint","pop","movsInList","rels","list","mov","movsRef","includes","state","lists","shouldUpdate","enlarge","imgSrc","title","rating","idVal","body","style","overflow","lbContent","createElement","className","lbInfo","innerHTML","lbMovie","lightbox","delButton","onclick","window","confirm","remove","refList","relations","removeChild","addList","marginTop","listRef","otherLists","relRef","pos","indexOf","splice","opt","disabled","selected","hidden","appendChild","i","listDiv","listBtn","choice","alert","formObj","set","addEventListener","componentWillUnmount","off","componentDidMount","apps","initializeApp","on","componentDidUpdate","prevProps","prevState","getMoreMovies","tmp","startAt","next","nextMovs","totalMovies","concat","searchMovies","movChoice","toLowerCase","render","map","bind","display","scrollToTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport MovieGallery from './MovieGallery';\nimport config from '../config.js';\n//const movies = require('../movies.json');\nconst firebase = require('firebase');\n\n/*\n  3. Pagination\n    - first only display 8\n    - display more by 8 (or less than 8 if not a multiple of 8)\n*/\n\nexport class Movies extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      currPoint: '',\n      lastMov: '',\n      movies: [],\n      lists: [],\n      listChoice: 'all',\n      displayButton: 'none',\n      shouldUpdate: false,\n    }\n  }\n\n  enlarge(imgSrc, title, director, rating, plot, idVal) {\n    document.body.style.overflow = 'hidden';\n    var lbContent = document.createElement('img');\n    lbContent.className = 'movLightbox-content';\n    lbContent.src = imgSrc;\n    lbContent.id = 'lbContent';\n\n    var lbInfo = document.createElement('div');\n    lbInfo.className = 'movLightbox-info';\n    lbInfo.id = 'lbInfo';\n    lbInfo.innerHTML = '<span class=\\'title\\'>'+title+'</span><br/><span class=\\'director\\'>'+director+'</span><br/><br/><span class=\\'rating\\'>IMDb Rating: '+rating+'</span><p>'+plot+'</p>';\n    \n    var lbMovie = document.createElement('div');\n    lbMovie.id = 'lbMovie';\n    lbMovie.className = 'movLightbox-container';\n    \n    var lightbox = document.createElement('div');\n    lightbox.id = 'lb';\n    lightbox.className = 'movLightbox';\n\n    var delButton = document.createElement('button');\n    delButton.id = 'delButton';\n    delButton.innerHTML = 'Delete Movie';\n    delButton.onclick = function () {\n      if(window.confirm('Are you sure you want to delete '+title+'?')) {\n        let ref = firebase.database().ref('movies');\n        ref.once('value').then(snapshot => {\n          let movies = snapshot.val();\n            for (let entry in movies) {\n              if(entry === idVal) {\n                firebase.database().ref('movies/'+entry).remove();\n              }\n            }\n        })\n\n        let refList = firebase.database().ref('relations');\n        refList.once('value').then(snapshot => {\n          let relations = snapshot.val();\n            for (let entry in relations) {\n              if(relations[entry].mov === idVal) {\n                firebase.database().ref('relations/'+entry).remove();\n              }\n            }\n        })\n        document.getElementById('lb').removeChild(document.getElementById('lbMovie'));\n        document.body.removeChild(document.getElementById('lb'));\n        document.body.style.overflow = 'auto';\n      }\n    };\n\n    var addList = document.createElement('select');\n    addList.id = 'add-list';\n    addList.style.marginTop = '10px';\n    addList.name = 'addLists';\n    let listRef = firebase.database().ref('lists');\n    let otherLists = [];\n    listRef.once('value').then(snapshot => {\n    //listRef.on('value', snapshot => {\n      let lists = snapshot.val();\n        for (let entry in lists) {\n          otherLists.push(lists[entry].name);\n        }\n        let relRef = firebase.database().ref('relations');\n        relRef.once('value').then(snapshot => {\n        //relRef.on('value', snapshot => {\n          let rels = snapshot.val();\n            for (let entry in rels) {\n              if(rels[entry].mov === idVal) {\n                let pos = otherLists.indexOf(rels[entry].list);\n                otherLists.splice(pos, 1);\n              }\n            }\n            var opt = document.createElement('option');\n            opt.value = '';\n            opt.innerHTML = 'Select List';\n            opt.disabled = 'true';\n            opt.selected = 'true';\n            opt.hidden = 'true';\n            addList.appendChild(opt);\n            for(var i in otherLists) {\n              opt = document.createElement('option');\n              opt.value= otherLists[i];\n              opt.innerHTML = otherLists[i]; \n              addList.appendChild(opt);\n            }\n        });\n    });\n\n    var listDiv = document.createElement('div');\n    var listBtn = document.createElement('button');\n    listBtn.id = 'list-btn';\n    listBtn.innerHTML = 'Add to List';\n    listDiv.appendChild(addList);\n    listDiv.appendChild(listBtn);\n    listBtn.onclick = function () {\n      var choice = document.getElementById('add-list').value;\n      if(choice.length === 0) {\n        alert('No list selected.');\n      } else {\n        let formObj = {\n          mov: idVal, \n          list: choice,\n        };\n        firebase.database().ref('relations').push().set(formObj);\n        alert('Successfully added '+title+' to '+choice+' list.');\n      }\n    };\n   \n    document.body.appendChild(lightbox);  \n    document.getElementById('lb').appendChild(lbMovie);\n    document.getElementById('lbMovie').appendChild(lbContent);\n    document.getElementById('lbMovie').appendChild(lbInfo);\n    document.getElementById('lbInfo').appendChild(listDiv);\n    document.getElementById('lbInfo').appendChild(delButton);\n    document.getElementById('lb').addEventListener('click', function(event) {\n      if(event.target.className === 'movLightbox') {\n        document.getElementById('lb').removeChild(document.getElementById('lbMovie'));\n        document.body.removeChild(document.getElementById('lb'));\n        document.body.style.overflow = 'auto';\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.ref.off();\n    this.listRef.off();\n  }\n\n  componentDidMount(){\n    document.title = 'Great Movies';\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n    this.ref = firebase.database().ref('movies');\n    this.ref.on('value', snapshot => {\n      let movies = snapshot.val();\n        let newData = [];\n        for (let entry in movies) {\n          newData.push({\n            id:  entry,\n            name:  movies[entry].name,\n            src:  movies[entry].src,\n            director:  movies[entry].director,\n            imdb:  movies[entry].imdb,\n            plot:  movies[entry].plot,\n          })\n        }\n        this.setState({lastMov: newData[newData.length-1]});\n        if(newData.length < 9) {\n          //document.getElementById('pag-container').style.display = 'none';\n          this.setState({displayButton: 'none'});\n        } else {\n          //document.getElementById('pag-container').style.display = 'block';\n          this.setState({displayButton: 'block'});\n        }\n        //this.setState({movies: newData});\n    });\n\n    // PAGINATION\n    let first = this.ref.orderByKey().limitToFirst(9);\n    first.on('value', snapshot => {\n      if(this.state.listChoice === 'all') {\n        let firstMovs = snapshot.val();\n        let currEight = [];\n        for (let entry in firstMovs) {\n          currEight.push({\n            id:  entry,\n            name:  firstMovs[entry].name,\n            src:  firstMovs[entry].src,\n            director:  firstMovs[entry].director,\n            imdb:  firstMovs[entry].imdb,\n            plot:  firstMovs[entry].plot,\n          });\n        }\n        this.setState({currPoint: currEight[currEight.length-1].id});\n        currEight.pop();\n        this.setState({movies: currEight});\n      } else {\n        let movsInList = [];\n        let ref = firebase.database().ref('relations');\n        ref.once('value').then(snapshot => {\n        //ref.on('value', snapshot => {\n          let rels = snapshot.val();\n          for (let entry in rels) {\n            if(rels[entry].list === this.state.listChoice) {\n              movsInList.push(rels[entry].mov);\n            }\n          }\n          let movsRef = firebase.database().ref('movies');\n          movsRef.once('value').then(snapshot => {\n          //movsRef.on('value', snapshot => {\n            let movies = snapshot.val();\n            let newData = [];\n            for (let entry in movies) {\n              if (movsInList.includes(entry)) {\n                newData.push({\n                  id:  entry,\n                  name:  movies[entry].name,\n                  src:  movies[entry].src,\n                  director:  movies[entry].director,\n                  imdb:  movies[entry].imdb,\n                  plot:  movies[entry].plot,\n                })\n              }\n            }\n            this.setState({movies: newData});\n            this.setState({displayButton: 'none'});\n          })\n          //ref.off();\n        })\n      }\n    });\n\n    this.listRef = firebase.database().ref('lists');\n    this.listRef.on('value', snapshot => {\n      let lists = snapshot.val();\n        let newData = [];\n        for (let entry in lists) {\n          newData.push(\n            lists[entry].name\n          )\n        }\n        this.setState({lists: newData});\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot){\n    //only call set state here if it is wrapped in a condition\n    //if you initialize this.state.shouldUpdate and have not changed it yet then this will not run\n    if(this.state.shouldUpdate !== prevState.shouldUpdate){\n      let ref = firebase.database().ref('movies');\n      ref.on('value', snapshot => {\n        let movies = snapshot.val();\n          let newData = [];\n          for (let entry in movies) {\n            newData.push({\n              id:  entry,\n              name:  movies[entry].name,\n              src:  movies[entry].src,\n              director:  movies[entry].director,\n              imdb:  movies[entry].imdb,\n              plot:  movies[entry].plot,\n            })\n          }\n          this.setState({lastMov: newData[newData.length-1]});\n          if(newData.length < 9) {\n            //document.getElementById('pag-container').style.display = 'none';\n            this.setState({displayButton: 'none'});\n          } else {\n            //document.getElementById('pag-container').style.display = 'block';\n            this.setState({displayButton: 'block'});\n          }\n          //this.setState({movies: newData});\n      });\n      // PAGINATION\n      let first = ref.orderByKey().limitToFirst(9);\n      first.on('value', snapshot => {\n        let firstMovs = snapshot.val();\n        let currEight = [];\n        for (let entry in firstMovs) {\n          currEight.push({\n            id:  entry,\n            name:  firstMovs[entry].name,\n            src:  firstMovs[entry].src,\n            director:  firstMovs[entry].director,\n            imdb:  firstMovs[entry].imdb,\n            plot:  firstMovs[entry].plot,\n          });\n        }\n        this.setState({currPoint: currEight[currEight.length-1].id});\n        currEight.pop();\n        this.setState({movies: currEight});\n      });\n      let listRef = firebase.database().ref('lists');\n      listRef.on('value', snapshot => {\n        let lists = snapshot.val();\n          let newData = [];\n          for (let entry in lists) {\n            newData.push(\n              lists[entry].name\n            )\n          }\n          this.setState({lists: newData});\n      })\n    }\n  }\n\n  getMoreMovies() {\n    let ref = firebase.database().ref('movies');\n    let tmp = ref.orderByKey().startAt(this.state.currPoint);\n    let next = tmp.limitToFirst(9);\n    next.on('value', snapshot => {\n      let nextMovs = snapshot.val();\n      let currEight = [];\n      for (let entry in nextMovs) {\n        currEight.push({\n          id:  entry,\n          name:  nextMovs[entry].name,\n          src:  nextMovs[entry].src,\n          director:  nextMovs[entry].director,\n          imdb:  nextMovs[entry].imdb,\n          plot:  nextMovs[entry].plot,\n        });\n      }\n      // If last batch \n      if(currEight[currEight.length-1].id === this.state.lastMov.id && currEight.length <= 8) {\n        this.setState({displayButton: 'none'});\n      } else {\n        this.setState({currPoint: currEight[currEight.length-1].id});\n        currEight.pop();\n      }\n      let totalMovies = this.state.movies;\n      totalMovies = totalMovies.concat(currEight);\n      this.setState({movies: totalMovies});\n    });\n  }\n\n  myChangeHandler = (event) => {\n    let field = event.target.name;\n    let value = event.target.value;\n    this.setState({[field]: value});\n    \n    let listChoice = document.getElementById('list').value;\n    if(listChoice === 'all') {\n      let ref = firebase.database().ref('movies');\n      ref.once('value').then(snapshot => {\n      //ref.on('value', snapshot => {\n        let movies = snapshot.val();\n          let newData = [];\n          for (let entry in movies) {\n            newData.push({\n              id:  entry,\n              name:  movies[entry].name,\n              src:  movies[entry].src,\n              director:  movies[entry].director,\n              imdb:  movies[entry].imdb,\n              plot:  movies[entry].plot,\n            })\n          }\n          this.setState({lastMov: newData[newData.length-1]});\n          if(newData.length < 9) {\n            this.setState({displayButton: 'none'});\n          } else {\n            this.setState({displayButton: 'block'});\n          }\n      });\n\n      // PAGINATION\n      let first = ref.orderByKey().limitToFirst(9);\n      first.once('value').then(snapshot => {\n      //first.on('value', snapshot => {\n        let firstMovs = snapshot.val();\n        let currEight = [];\n        for (let entry in firstMovs) {\n          currEight.push({\n            id:  entry,\n            name:  firstMovs[entry].name,\n            src:  firstMovs[entry].src,\n            director:  firstMovs[entry].director,\n            imdb:  firstMovs[entry].imdb,\n            plot:  firstMovs[entry].plot,\n          });\n        }\n        this.setState({currPoint: currEight[currEight.length-1].id});\n        currEight.pop();\n        this.setState({movies: currEight});\n      });\n    } else {\n      let movsInList = [];\n      let ref = firebase.database().ref('relations');\n      ref.once('value').then(snapshot => {\n      //ref.on('value', snapshot => {\n        let rels = snapshot.val();\n        for (let entry in rels) {\n          if(rels[entry].list === listChoice) {\n            movsInList.push(rels[entry].mov);\n          }\n        }\n        let movsRef = firebase.database().ref('movies');\n        movsRef.once('value').then(snapshot => {\n        //movsRef.on('value', snapshot => {\n          let movies = snapshot.val();\n          let newData = [];\n          for (let entry in movies) {\n            if (movsInList.includes(entry)) {\n              newData.push({\n                id:  entry,\n                name:  movies[entry].name,\n                src:  movies[entry].src,\n                director:  movies[entry].director,\n                imdb:  movies[entry].imdb,\n                plot:  movies[entry].plot,\n              })\n            }\n          }\n          this.setState({movies: newData});\n          this.setState({displayButton: 'none'});\n        })\n        //ref.off();\n      })\n    }\n  }\n\n  searchMovies() {\n    let movChoice = document.getElementById('search').value.toLowerCase();\n\n    let ref = firebase.database().ref('movies');\n    ref.once('value').then(snapshot => {\n    //ref.on('value', snapshot => {\n      let movies = snapshot.val();\n        let newData = [];\n        for (let entry in movies) {\n          let title = (movies[entry].name).toLowerCase();\n          if (title.includes(movChoice)) {\n            //newData.push(movies[entry].id);\n            newData.push({\n              id:  entry,\n              name:  movies[entry].name,\n              src:  movies[entry].src,\n              director:  movies[entry].director,\n              imdb:  movies[entry].imdb,\n              plot:  movies[entry].plot,\n            })\n          }\n        }\n        //if(newData.length < 9) {\n          //document.getElementById('pag-container').style.display = 'none';\n        this.setState({displayButton: 'none'});\n        /*} else {\n          //document.getElementById('pag-container').style.display = 'block';\n          this.setState({displayButton: 'block'});\n        }*/\n        this.setState({movies: newData});\n    })\n  }\n  \n  render() {\n    return (\n      <div>\n        <div className='content'>\n          <div id='top-bar'>\n            <div id='list-container'>\n              <select name='listChoice' id='list' onChange={this.myChangeHandler}>\n                <option value='all'>All</option>\n                {\n                  this.state.lists.map((list) => (\n                    <option value={list}>{list}</option>\n                  ))\n                }\n              </select>\n            </div>\n            <div id='search-bar'>\n              <input type='text' placeholder='Movie Title' name='search' id='search' />\n              <button id='search-btn' onClick={this.searchMovies.bind(this)}>Search</button>\n            </div>\n          </div>\n          <div className='mov-container'>\n            <MovieGallery movieList={this.state.movies} enlarge={this.enlarge} />\n          </div>\n          <div id='pag-container' style={{display: this.state.displayButton}}>\n            <button id='pagination' onClick={this.getMoreMovies.bind(this)}>Load More</button>\n          </div>\n        </div>\n        <button className='scrollButton' style={{display: this.props.display}} onClick={this.props.scrollToTop}>Scroll to Top</button>\n      </div>\n    );\n  }\n}\nexport default Movies;"]},"metadata":{},"sourceType":"module"}