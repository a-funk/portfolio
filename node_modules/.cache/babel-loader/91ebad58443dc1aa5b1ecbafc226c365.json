{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alex\\\\Downloads\\\\react-portfolio-master\\\\react-portfolio-master\\\\src\\\\Components\\\\Add.js\";\nimport React, { Component } from 'react';\nimport config from '../config.js';\n\nconst axios = require('axios');\n\nconst firebase = require('firebase');\n\nexport class Add extends Component {\n  constructor(props) {\n    super();\n\n    this.myFormHandler = event => {\n      event.preventDefault();\n      let req = 'https://www.omdbapi.com/?apikey=8ac22864&i=' + this.state.movId;\n      this.getMovieName(this, req);\n    };\n\n    this.inputHandler = event => {\n      let field = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.state = {\n      movId: '',\n      src: '',\n      title: '',\n      director: '',\n      imdb: '',\n      plot: '' //movies: [],\n      //shouldUpdate: false,\n\n    };\n  }\n\n  componentDidMount() {\n    document.title = 'Add a Movie';\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  updateDb(obj) {\n    let formObj = {\n      name: obj.state.title,\n      src: obj.state.src,\n      director: obj.state.director,\n      imdb: obj.state.imdb,\n      plot: obj.state.plot\n    };\n    let ref = firebase.database().ref('movies');\n    ref.once('value').then(function (snapshot) {\n      let movExists = snapshot.child(obj.state.movId).exists();\n\n      if (movExists) {\n        alert('Movie has already been added.');\n      } else {\n        ref.child(obj.state.movId).set(formObj);\n        alert('Movie successfully added!');\n      }\n    });\n  }\n\n  getMovieName(obj, req) {\n    axios.get(req).then(function (response) {\n      // handle success\n      obj.setState({\n        src: response.data.Poster,\n        title: response.data.Title,\n        director: response.data.Director,\n        imdb: response.data.imdbRating,\n        plot: response.data.Plot\n      }); //console.log(response.data);\n    }).then(function () {\n      obj.updateDb(obj);\n    }).catch(function (error) {\n      // handle error\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"add-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.myFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Add a New Movie\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Please enter the IMDb movie ID for your desired movie:\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"movId\",\n      type: \"text\",\n      size: \"50\",\n      required: true,\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 99\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 104\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      id: \"submit\",\n      name: \"submit\",\n      value: \"Add Movie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default Add;","map":{"version":3,"sources":["C:/Users/Alex/Downloads/react-portfolio-master/react-portfolio-master/src/Components/Add.js"],"names":["React","Component","config","axios","require","firebase","Add","constructor","props","myFormHandler","event","preventDefault","req","state","movId","getMovieName","inputHandler","field","target","name","value","setState","src","title","director","imdb","plot","componentDidMount","document","apps","length","initializeApp","updateDb","obj","formObj","ref","database","once","then","snapshot","movExists","child","exists","alert","set","get","response","data","Poster","Title","Director","imdbRating","Plot","catch","error","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport config from '../config.js';\nconst axios = require('axios');\nconst firebase = require('firebase')\n\nexport class Add extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      movId: '',\n      src: '',\n      title: '',\n      director: '',\n      imdb: '',\n      plot: '',\n      //movies: [],\n      //shouldUpdate: false,\n    }\n  }\n\n  componentDidMount(){\n    document.title = 'Add a Movie';\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  myFormHandler = (event) => {\n    event.preventDefault();\n    let req = 'https://www.omdbapi.com/?apikey=8ac22864&i='+this.state.movId;\n    this.getMovieName(this, req);\n  }\n\n  inputHandler = (event) => {\n    let field = event.target.name;\n    let value = event.target.value;\n    this.setState({[field]: value});\n  }\n\n  updateDb(obj) {\n    let formObj = {\n      name: obj.state.title,\n      src: obj.state.src,\n      director: obj.state.director,\n      imdb: obj.state.imdb,\n      plot: obj.state.plot,\n    };\n    let ref = firebase.database().ref('movies');\n    ref.once('value').then(function(snapshot) {\n      let movExists = snapshot.child(obj.state.movId).exists();\n      if(movExists) {\n        alert('Movie has already been added.');\n      } else {\n        ref.child(obj.state.movId).set(formObj);\n        alert('Movie successfully added!');\n      }\n    });\n  }\n\n  getMovieName(obj, req) {\n    axios.get(req)\n    .then(function (response) {\n      // handle success\n      obj.setState({\n        src: response.data.Poster,\n        title: response.data.Title,\n        director: response.data.Director,\n        imdb: response.data.imdbRating,\n        plot: response.data.Plot,\n      });\n      //console.log(response.data);\n    })\n    .then(function () {\n      obj.updateDb(obj);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n  }\n\n  render() {\n    return(\n      <div id='add-box'>\n        <form onSubmit={this.myFormHandler}>\n          <h2>Add a New Movie</h2>\n          <p>Please enter the IMDb movie ID for your desired movie:</p>\n          <input name='movId' type='text' size='50' required onChange={this.inputHandler}></input><br/><br/>\n          <input type='submit' id='submit' name='submit' value='Add Movie'></input>\n        </form>\n      </div>      \n    );\n  }\n}\nexport default Add;"]},"metadata":{},"sourceType":"module"}